language: python
python: 2.7
branches:
  only:
    - master
    - /^\d\.\d+$/
    - /^\d\.\d+\.\d+(rc\d+|dev\d+)?$/

services:
  - docker
  - mysql
  - postgresql
  - redis-server

env:
  global:
    - DOCKER_COMPOSE_VERSION=1.7.1
  matrix:
    - TOXENV=py27
    - TOXENV=flake8

matrix:
  include:
    - python: 3.5
      env: TOXENV=py35
      services:
        - docker
        - mysql
        - postgresql
        - redis-server

install:
  - pip install -U tox wheel codecov
  - pip install -r requirements/tests.txt

before_install:
  - sudo apt-get update
  - sudo rm -f /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - git clone https://github.com/scrapinghub/hbase-docker.git
  - docker pull scrapinghub/hbase-docker
  - mkdir data
  - ./hbase-docker/start-hbase.sh

before_script:
  - mysql -u root -e "set global innodb_large_prefix=1;"
  - mysql -u root -e "set global innodb_file_format='Barracuda';"
  - mysql -u root -e "set global innodb_file_per_table=true;"
  - tests/run_zmq_broker.sh
  - docker --version
  - docker-compose --version
  - docker-compose --verbose -f tests/kafka/docker-compose.yml up -d
  - docker ps -a

script: tox

after_success:
  - codecov

deploy:
  provider: pypi
  distributions: sdist bdist_wheel
  user: scrapinghub
  password:
    secure: bG1ycgBJrVfgBsHAwaWScL2V1x52/aZy2znE2kFzFfYq95HS51mu1GO2PKwpATJyMCs/xUIKGhiBtoo8LzNmNU2kPgarQFwzpLkx2ninOm+3uAwuIfGGWsonBW/h854n+cNwppJOlfEOxvMVerVVpdV4EFeJfEkVYascwOBbnqo=
  on:
    branch: master
    tags: true
    condition: $TOXENV == py27
